<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>最阴郁的阳光</title>
  <subtitle>I See You</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xushuo.github.io/"/>
  <updated>2017-03-23T07:27:56.905Z</updated>
  <id>https://xushuo.github.io/</id>
  
  <author>
    <name>表闹蛋蛋酱</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VUE官方教程随笔</title>
    <link href="https://xushuo.github.io/2017/03/23/VUE%E5%AE%98%E6%96%B9%E6%95%99%E7%A8%8B%E9%9A%8F%E7%AC%94/"/>
    <id>https://xushuo.github.io/2017/03/23/VUE官方教程随笔/</id>
    <published>2017-03-23T03:36:54.000Z</published>
    <updated>2017-03-23T07:27:56.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VUE-js官方教程随笔"><a href="#VUE-js官方教程随笔" class="headerlink" title="VUE.js官方教程随笔"></a>VUE.js官方教程随笔</h1><p>好吧~酱酱本来在看es6的promise，偶然发现了VUE.JS,一不小心看了下大概，发现还挺有趣。所以索性就先把promise撂在一边，去官网学习下vue<em>.</em>。当然我也不确定这个会更新到什么时候，哈哈。</p>
<hr>
<h2 id="vue的安装"><a href="#vue的安装" class="headerlink" title="vue的安装"></a>vue的安装</h2><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>vue.js不支持ie8及其以下版本，支持所有兼容es5的浏览器。</p>
<h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><p><code>$ npm install vue</code></p>
<h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><p>vue.js 提供一个官方的命令行工具，可以快速搭建单页面应用，我们先用他来测试下。</p>
<pre><code># 全局安装 vue-cli
$ npm install --g vue-cli
# 创建一个基于webpack模板的项目
$ vue init webpack job
# 安装依赖
$ cd job
$ npm install 
$npm run dev
</code></pre><p><img src="/images/vue/1.png" alt=""><br>上面这个就是我初步测试的一个项目,当然这个是没有路由的，init的时候会有选项，可以产生更多的功能以及模块</p>
<h2 id="vue-js的初步体验"><a href="#vue-js的初步体验" class="headerlink" title="vue.js的初步体验"></a>vue.js的初步体验</h2><h3 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h3><pre><code>&lt;div id=&quot;app&quot;&gt;
  {{ message }}
&lt;/div&gt;

var app = new Vue({
  el: &apos;#app&apos;,
  data: {
    message: &apos;Hello Vue!&apos;
  }
})
</code></pre><p>vue提供了数据和dom的绑定，当代码更改，页面就会更新。有点类似于webpack的热加载和angularjs。</p>
<h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p>机智的我从官网上偷来了这个图，看起来灰常长~长~长~~~<br>所以，我就不解释了，很·清晰·<br><img src="https://cn.vuejs.org/images/lifecycle.png" alt=""></p>
<h2 id="vue-js-模板语法"><a href="#vue-js-模板语法" class="headerlink" title="vue.js 模板语法"></a>vue.js 模板语法</h2><pre><code>之后我就使用官方的title了，毕竟只是随笔，摘抄总结些知识点
</code></pre><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ul>
<li>文本 mustache ： <code>&lt;span&gt;Message: &lt;/span&gt;</code> </li>
<li>如果为一次性插入，则为  <code>&lt;span v-once&gt;This will never change: &lt;/span&gt;</code></li>
<li>纯html： <code>&lt;div v-html=&quot;rawHtml&quot;&gt;&lt;/div&gt;</code></li>
<li>文本 v-text=“msg” 等价于 </li>
<li>绑定属性： v-bind <code>&lt;div v-bind:id=&quot;dynamicId&quot;&gt;&lt;/div&gt;</code></li>
<li>js表达式： NaN <code>&lt;div v-bind:id=&quot; &#39;list&#39; +id &quot;&gt;&lt;/div&gt;</code></li>
<li>绑定事件 v-on  <code>&lt;a v-on:click=&quot;event&quot;&gt;&lt;/a&gt;</code></li>
<li><p>过滤器<br> 1.过滤器函数总是接受表达式的第一个值作为第一个参数，表达式的参数则从第二个开始。<br> 可以添加多个表达式。</p>
<p> 2.过滤器可以用到两个地方 mustache 插值以及v-bind 表达式</p>
</li>
</ul>
<pre><code>{{ item.label | filter(''123') }}
filters:{
      filter(val,arg1){
        if(!val) return &apos;&apos;;
        val=val.toString();
        return val.charAt(0).toUpperCase()+val.slice(1);
      }
    }
arg1 = 123 
</code></pre><ul>
<li>缩写 <ol>
<li>v-on  <code>&lt;a @click=&quot;doSomething&quot;&gt;&lt;/a&gt;</code></li>
<li>v-bind   <code>&lt;a :href=&quot;url&quot;&gt;&lt;/a&gt;</code></li>
</ol>
</li>
</ul>
<h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VUE-js官方教程随笔&quot;&gt;&lt;a href=&quot;#VUE-js官方教程随笔&quot; class=&quot;headerlink&quot; title=&quot;VUE.js官方教程随笔&quot;&gt;&lt;/a&gt;VUE.js官方教程随笔&lt;/h1&gt;&lt;p&gt;好吧~酱酱本来在看es6的promise，偶然发现了VUE.
    
    </summary>
    
      <category term="教程" scheme="https://xushuo.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="vue.js" scheme="https://xushuo.github.io/tags/vue-js/"/>
    
      <category term="教程" scheme="https://xushuo.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="前端" scheme="https://xushuo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>来谈谈Promise</title>
    <link href="https://xushuo.github.io/2017/03/17/%E6%9D%A5%E8%B0%88%E8%B0%88Promise/"/>
    <id>https://xushuo.github.io/2017/03/17/来谈谈Promise/</id>
    <published>2017-03-17T01:39:43.000Z</published>
    <updated>2017-03-20T01:24:42.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Promise——异步编程解决方案"><a href="#Promise——异步编程解决方案" class="headerlink" title="Promise——异步编程解决方案"></a>Promise——异步编程解决方案</h1><p>酱酱这段时间又学习了下nodejs，发现了promise这个神奇的东东。看了网上的几篇博文，各种思想在脑中疯狂的对战，乱的很。/(ㄒoㄒ)/~~实在没办法，希望一边写一边理解吧-。-</p>
<hr>
<h2 id="Promise的登场"><a href="#Promise的登场" class="headerlink" title="Promise的登场"></a>Promise的登场</h2><h3 id="promise是什么呢？"><a href="#promise是什么呢？" class="headerlink" title="promise是什么呢？"></a>promise是什么呢？</h3><p>因为ES6发布了，promise被列为正式规范，主流浏览器对ES6也是极大的支持，所以我们先在chrome浏览器中看下这个宝贝啥东东。<br><img src="/images/promise.png" alt=""><br>promise对象是一个构造函数，拥有all、race、reject以及resolve方法。new的新对象有catch和then方法。</p>
<h4 id="promise的状态"><a href="#promise的状态" class="headerlink" title="promise的状态"></a>promise的状态</h4><p>promise三种状态：未完成(pending),已完成(fulfilled),失败(rejected).状态之前之间不可逆转。</p>
<h4 id="promise的用法"><a href="#promise的用法" class="headerlink" title="promise的用法"></a>promise的用法</h4><pre><code>var promise = new Promise(function(resolve, reject) {  
    if (/* 异步操作成功 */){    
      resolve(value);  
    } else {  
      reject(error);   
} });
</code></pre><p>promise添加了一个函数作为参数——resolve,reject。<br>resolve函数可以将promise状态由pending-&gt;fulfilled，异步操作成功时调用。<br>reject函数可以将promise状态由pending-&gt;rejected，异步操作失败时调用。</p>
<pre><code>promise.then(resolve,reject){
} 
</code></pre><p>promise的then方法接收resolve和reject回调函数，分别为成功和失败。reject函数是可选的。<br>promise可以调用多个then方法，顺序执行。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Promise——异步编程解决方案&quot;&gt;&lt;a href=&quot;#Promise——异步编程解决方案&quot; class=&quot;headerlink&quot; title=&quot;Promise——异步编程解决方案&quot;&gt;&lt;/a&gt;Promise——异步编程解决方案&lt;/h1&gt;&lt;p&gt;酱酱这段时间又学习了
    
    </summary>
    
      <category term="es6" scheme="https://xushuo.github.io/categories/es6/"/>
    
    
      <category term="promise" scheme="https://xushuo.github.io/tags/promise/"/>
    
      <category term="nodejs" scheme="https://xushuo.github.io/tags/nodejs/"/>
    
      <category term="es6" scheme="https://xushuo.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>史诗级逆转——无敌巴萨</title>
    <link href="https://xushuo.github.io/2017/03/09/%E5%8F%B2%E8%AF%97%E7%BA%A7%E9%80%86%E8%BD%AC%E2%80%94%E2%80%94%E6%97%A0%E6%95%8C%E5%B7%B4%E8%90%A8/"/>
    <id>https://xushuo.github.io/2017/03/09/史诗级逆转——无敌巴萨/</id>
    <published>2017-03-09T02:49:38.000Z</published>
    <updated>2017-03-09T03:19:07.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="欧冠-奇迹！95分钟绝杀-巴萨6-1巴黎惊天逆转"><a href="#欧冠-奇迹！95分钟绝杀-巴萨6-1巴黎惊天逆转" class="headerlink" title="欧冠-奇迹！95分钟绝杀 巴萨6-1巴黎惊天逆转"></a>欧冠-奇迹！95分钟绝杀 巴萨6-1巴黎惊天逆转</h2><p>北京时间3月9日03:45(西班牙当地时间8日20:45)，2016/17赛季欧冠1/8决赛次回合一场焦点战在诺坎普球场展开争夺，巴塞罗那主场6比1取胜巴黎圣日耳曼，苏亚雷斯和梅西进球，库尔扎瓦乌龙，但卡瓦尼打入关键客场进球，内马尔梅开二度，塞尔吉-罗伯托第95分钟绝杀。巴萨总分6比5涉险晋级。<br>巴萨也成为首支在欧战首回合4球落后下成功翻盘的球队。</p>
<p><img src="/images/basa.jpg" alt="&quot;比分&quot;">  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;欧冠-奇迹！95分钟绝杀-巴萨6-1巴黎惊天逆转&quot;&gt;&lt;a href=&quot;#欧冠-奇迹！95分钟绝杀-巴萨6-1巴黎惊天逆转&quot; class=&quot;headerlink&quot; title=&quot;欧冠-奇迹！95分钟绝杀 巴萨6-1巴黎惊天逆转&quot;&gt;&lt;/a&gt;欧冠-奇迹！95分钟绝杀 巴
    
    </summary>
    
      <category term="体育" scheme="https://xushuo.github.io/categories/%E4%BD%93%E8%82%B2/"/>
    
    
      <category term="巴萨" scheme="https://xushuo.github.io/tags/%E5%B7%B4%E8%90%A8/"/>
    
      <category term="足球" scheme="https://xushuo.github.io/tags/%E8%B6%B3%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>常用命令集合</title>
    <link href="https://xushuo.github.io/2017/03/07/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/"/>
    <id>https://xushuo.github.io/2017/03/07/常用命令集合/</id>
    <published>2017-03-07T05:49:04.000Z</published>
    <updated>2017-03-08T07:27:01.442Z</updated>
    
    <content type="html"><![CDATA[<p>新建一篇博客<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new post <span class="string">"article title"</span></div></pre></td></tr></table></figure></p>
<p>文章编辑好之后，运行生成、部署命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g   // 生成</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d   // 部署</div></pre></td></tr></table></figure>
<p>执行下面的命令，相当于上面两条命令的效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g <span class="comment">#在部署前先生成</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      hexo对文章操作
    
    </summary>
    
      <category term="Hexo命令教程" scheme="https://xushuo.github.io/categories/Hexo%E5%91%BD%E4%BB%A4%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="命令" scheme="https://xushuo.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="hexo" scheme="https://xushuo.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>新的开始</title>
    <link href="https://xushuo.github.io/2017/03/07/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>https://xushuo.github.io/2017/03/07/新的开始/</id>
    <published>2017-03-07T02:56:21.000Z</published>
    <updated>2017-03-07T02:58:59.335Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第一个博客文章，新的开始。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我的第一个博客文章，新的开始。&lt;/p&gt;

    
    </summary>
    
    
      <category term="开始" scheme="https://xushuo.github.io/tags/%E5%BC%80%E5%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xushuo.github.io/2017/03/07/hello-world/"/>
    <id>https://xushuo.github.io/2017/03/07/hello-world/</id>
    <published>2017-03-07T02:28:18.999Z</published>
    <updated>2017-03-07T02:28:18.999Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
